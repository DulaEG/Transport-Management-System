{"ast":null,"code":"import axios from \"axios\";\nimport { baseUrl } from \"../utils/constants\";\n\n// Axios instance for the API\nconst api = axios.create({\n  baseURL: baseUrl + \"/users\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// User service object for CRUD operations\nconst userService = {\n  // Fetch all users\n  getAllUsers: async () => {\n    try {\n      const response = await api.get(\"/\");\n      return response.data; // Return the list of users\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n      throw error; // Handle error\n    }\n  },\n  // Fetch a user by ID\n  getUserById: async id => {\n    try {\n      const response = await api.get(`/${id}`);\n      return response.data; // Return the user data\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      throw error; // Handle error\n    }\n  },\n  // Create a new user\n  createUser: async userData => {\n    try {\n      const response = await api.post(\"/\", userData);\n      return response.data; // Return the newly created user\n    } catch (error) {\n      console.error(\"Error creating user:\", error);\n      throw error; // Handle error\n    }\n  },\n  // Update a user by ID\n  updateUser: async (id, userData) => {\n    try {\n      const response = await api.put(`/${id}`, userData);\n      return response.data; // Return the updated user\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n      throw error; // Handle error\n    }\n  },\n  // Delete a user by ID\n  deleteUser: async id => {\n    try {\n      const response = await api.delete(`/${id}`);\n      return response.data; // Return confirmation of deletion\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      throw error; // Handle error\n    }\n  }\n};\nexport default userService;","map":{"version":3,"names":["axios","baseUrl","api","create","baseURL","headers","userService","getAllUsers","response","get","data","error","console","getUserById","id","createUser","userData","post","updateUser","put","deleteUser","delete"],"sources":["C:/Users/dulas/Desktop/Transport-Management-System/frontend/src/services/userService.js"],"sourcesContent":["import axios from \"axios\";\nimport { baseUrl } from \"../utils/constants\";\n\n// Axios instance for the API\nconst api = axios.create({\n  baseURL: baseUrl + \"/users\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// User service object for CRUD operations\nconst userService = {\n  // Fetch all users\n  getAllUsers: async () => {\n    try {\n      const response = await api.get(\"/\");\n      return response.data; // Return the list of users\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n      throw error; // Handle error\n    }\n  },\n\n  // Fetch a user by ID\n  getUserById: async (id) => {\n    try {\n      const response = await api.get(`/${id}`);\n      return response.data; // Return the user data\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      throw error; // Handle error\n    }\n  },\n\n  // Create a new user\n  createUser: async (userData) => {\n    try {\n      const response = await api.post(\"/\", userData);\n      return response.data; // Return the newly created user\n    } catch (error) {\n      console.error(\"Error creating user:\", error);\n      throw error; // Handle error\n    }\n  },\n\n  // Update a user by ID\n  updateUser: async (id, userData) => {\n    try {\n      const response = await api.put(`/${id}`, userData);\n      return response.data; // Return the updated user\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n      throw error; // Handle error\n    }\n  },\n\n  // Delete a user by ID\n  deleteUser: async (id) => {\n    try {\n      const response = await api.delete(`/${id}`);\n      return response.data; // Return confirmation of deletion\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      throw error; // Handle error\n    }\n  },\n};\n\nexport default userService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,oBAAoB;;AAE5C;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO,GAAG,QAAQ;EAC3BI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAG;EAClB;EACAC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,GAAG,CAAC;MACnC,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED;EACAE,WAAW,EAAE,MAAOC,EAAE,IAAK;IACzB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,IAAIK,EAAE,EAAE,CAAC;MACxC,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED;EACAI,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMN,GAAG,CAACe,IAAI,CAAC,GAAG,EAAED,QAAQ,CAAC;MAC9C,OAAOR,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED;EACAO,UAAU,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,QAAQ,KAAK;IAClC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMN,GAAG,CAACiB,GAAG,CAAC,IAAIL,EAAE,EAAE,EAAEE,QAAQ,CAAC;MAClD,OAAOR,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED;EACAS,UAAU,EAAE,MAAON,EAAE,IAAK;IACxB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACmB,MAAM,CAAC,IAAIP,EAAE,EAAE,CAAC;MAC3C,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK,CAAC,CAAC;IACf;EACF;AACF,CAAC;AAED,eAAeL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}