{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dulas\\\\Desktop\\\\Transport-Management-System\\\\frontend\\\\src\\\\modules\\\\IncomeExpenseManagemt\\\\DriverIncomeManager.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Button, Modal, Form, Input, DatePicker, InputNumber, message, Row, Space, Select, Upload } from \"antd\";\nimport { PlusOutlined, EditOutlined, DeleteOutlined, LoadingOutlined, FileSearchOutlined, FilePdfOutlined, UploadOutlined, SwapOutlined } from \"@ant-design/icons\";\nimport driverIncomeService from \"../../services/driverIncomeService\";\nimport moment from \"moment\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { uploadFile } from \"../../services/uploadFileService\";\nimport userService from \"../../services/userService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst DriverIncomeManager = () => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isApprovalFormVisible, setIsApprovalFormVisible] = useState(false);\n  const [editingIncome, setEditingIncome] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [formApprovalCurrent, setFormApprovalCurrent] = useState(\"approved\");\n  const [form] = Form.useForm();\n  const [approvalForm] = Form.useForm();\n\n  // Fetch all incomes\n  const fetchIncomes = async () => {\n    setLoading(true);\n    try {\n      const drivers = await userService.getAllUsers();\n      const data = await driverIncomeService.getAllIncomes();\n      console.log(drivers);\n      setDrivers(drivers);\n      setIncomes(data);\n    } catch (error) {\n      message.error(\"Failed to fetch incomes.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchIncomes();\n  }, []);\n\n  // Show modal for creating or editing income\n  const showModal = (income = null) => {\n    setEditingIncome(income);\n    if (income) {\n      form.setFieldsValue({\n        ...income,\n        incomeDate: moment(income.incomeDate)\n      });\n    } else {\n      form.resetFields();\n    }\n    setIsModalVisible(true);\n  };\n  const showApprovalForm = income => {\n    setEditingIncome(income);\n    setIsApprovalFormVisible(true);\n  };\n  const handleApprovalSubmit = async () => {\n    try {\n      const values = await approvalForm.validateFields();\n      let status = values.status;\n      let rejectionReason = values.rejectionReason;\n      console.log(status);\n      if (status === \"approved\") {\n        status = \"approved\";\n        rejectionReason = \"\";\n      } else {\n        status = \"rejected\";\n      }\n      const incomeData = {\n        status: status,\n        rejectionReason: rejectionReason\n      };\n      await driverIncomeService.updateIncomeStatus(editingIncome._id, incomeData);\n      message.success(\"Income updated successfully.\");\n      setIsApprovalFormVisible(false);\n      setEditingIncome(null);\n      fetchIncomes();\n    } catch (error) {\n      message.error(\"Error in processing the form.\");\n    }\n  };\n\n  // Handle form submission for creating/updating income\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      let downloadUrl = \"\";\n      if (values.incomeSlipImage) {\n        if (values.incomeSlipImage.file) {\n          downloadUrl = await uploadFile(values.incomeSlipImage.file.originFileObj);\n        }\n      } else {\n        downloadUrl = editingIncome.incomeSlipImage;\n      }\n      const incomeData = {\n        ...values,\n        incomeSlipImage: downloadUrl,\n        incomeDate: values.incomeDate.format(\"YYYY-MM-DD\")\n      };\n      if (editingIncome) {\n        await driverIncomeService.updateIncome(editingIncome._id, incomeData);\n        message.success(\"Income updated successfully.\");\n      } else {\n        await driverIncomeService.createIncome(incomeData);\n        message.success(\"Income created successfully.\");\n      }\n      setIsModalVisible(false);\n      setEditingIncome(null);\n      fetchIncomes();\n    } catch (error) {\n      message.error(\"Error in processing the form.\");\n    }\n  };\n\n  // Delete income\n  const deleteIncome = async id => {\n    try {\n      await driverIncomeService.deleteIncome(id);\n      message.success(\"Income deleted successfully.\");\n      fetchIncomes();\n    } catch (error) {\n      message.error(\"Failed to delete income.\");\n    }\n  };\n\n  // Generate PDF\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Driver Income Report\", 14, 15);\n    const tableColumn = [\"Income ID\", \"Driver Email\", \"Income Date\", \"Income Time\", \"Amount\", \"Description\", \"Status\"];\n    const tableRows = incomes.map(income => [income.incomeId, income.driverEmail, moment(income.incomeDate).format(\"YYYY-MM-DD\"), income.incomeTime, income.incomeAmount, income.incomeDescription, income.status]);\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 20\n    });\n    doc.save(\"driver_income_report.pdf\");\n  };\n\n  // Handle search\n  const handleSearch = value => {\n    setSearchText(value);\n  };\n\n  // Handle sort\n  const handleSort = (pagination, filters, sorter) => {\n    setSortedInfo(sorter);\n  };\n\n  // Filter data based on search text\n  const filteredData = incomes.filter(income => income.incomeId.toLowerCase().includes(searchText.toLowerCase()) || income.driverEmail.toLowerCase().includes(searchText.toLowerCase()) || income.incomeDescription.toLowerCase().includes(searchText.toLowerCase()));\n\n  // Table columns\n  const columns = [{\n    title: \"Income ID\",\n    dataIndex: \"incomeId\",\n    key: \"incomeId\",\n    sorter: (a, b) => a.incomeId.localeCompare(b.incomeId),\n    sortOrder: sortedInfo.columnKey === \"incomeId\" && sortedInfo.order\n  }, {\n    title: \"Driver Email\",\n    dataIndex: \"driverEmail\",\n    key: \"driverEmail\",\n    sorter: (a, b) => a.driverEmail.localeCompare(b.driverEmail),\n    sortOrder: sortedInfo.columnKey === \"driverEmail\" && sortedInfo.order\n  }, {\n    title: \"Income Date\",\n    dataIndex: \"incomeDate\",\n    key: \"incomeDate\",\n    render: date => moment(date).format(\"YYYY-MM-DD\"),\n    sorter: (a, b) => moment(a.incomeDate).unix() - moment(b.incomeDate).unix(),\n    sortOrder: sortedInfo.columnKey === \"incomeDate\" && sortedInfo.order\n  }, {\n    title: \"Income Time\",\n    dataIndex: \"incomeTime\",\n    key: \"incomeTime\"\n  }, {\n    title: \"Amount\",\n    dataIndex: \"incomeAmount\",\n    key: \"incomeAmount\",\n    sorter: (a, b) => a.incomeAmount - b.incomeAmount,\n    sortOrder: sortedInfo.columnKey === \"incomeAmount\" && sortedInfo.order\n  }, {\n    title: \"Description\",\n    dataIndex: \"incomeDescription\",\n    key: \"incomeDescription\"\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    sorter: (a, b) => a.status.localeCompare(b.status),\n    sortOrder: sortedInfo.columnKey === \"status\" && sortedInfo.order\n  }, {\n    title: \"Actions\",\n    key: \"actions\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(SwapOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this),\n        onClick: () => showApprovalForm(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this),\n        onClick: () => showModal(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 19\n        }, this),\n        onClick: () => deleteIncome(record._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      justify: \"space-between\",\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Driver Income Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(FilePdfOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this),\n          onClick: generatePDF,\n          children: \"Generate PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search by Income ID, Driver Email, or Description\",\n        prefix: /*#__PURE__*/_jsxDEV(FileSearchOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 19\n        }, this),\n        onChange: e => handleSearch(e.target.value),\n        style: {\n          width: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: filteredData,\n      columns: columns,\n      rowKey: record => record._id,\n      loading: loading ? {\n        indicator: /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 41\n        }, this)\n      } : false,\n      onChange: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: editingIncome ? \"Edit Income\" : \"Add Income\",\n      open: isModalVisible,\n      onOk: handleSubmit,\n      onCancel: () => setIsModalVisible(false),\n      okText: editingIncome ? \"Update\" : \"Create\",\n      cancelText: \"Cancel\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Income ID\",\n          name: \"incomeId\",\n          rules: [{\n            required: true,\n            message: \"Please enter the Income ID\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Driver Email\",\n          name: \"driverEmail\",\n          rules: [{\n            required: true,\n            message: \"Please enter the Driver Email\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            children: drivers.map(driver => {\n              return /*#__PURE__*/_jsxDEV(Option, {\n                value: driver.email,\n                children: driver.email\n              }, driver._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Income Date\",\n          name: \"incomeDate\",\n          rules: [{\n            required: true,\n            message: \"Please select the Income Date\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Income Time\",\n          name: \"incomeTime\",\n          rules: [{\n            required: true,\n            message: \"Please enter the Income Time\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Income Amount\",\n          name: \"incomeAmount\",\n          rules: [{\n            required: true,\n            message: \"Please enter the Amount\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Description\",\n          name: \"incomeDescription\",\n          rules: [{\n            required: true,\n            message: \"Please enter the Description\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Income Slip Image\",\n          name: \"incomeSlipImage\",\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 29\n              }, this),\n              children: \"Click to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Approval Form\",\n      open: isApprovalFormVisible,\n      onOk: handleApprovalSubmit,\n      onCancel: () => setIsApprovalFormVisible(false),\n      cancelText: \"Cancel\",\n      okText: \"Submit\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: approvalForm,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Status\",\n          name: \"status\",\n          rules: [{\n            required: true,\n            message: \"Please select the Status\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            defaultActiveFirstOption: formApprovalCurrent,\n            onChange: value => setFormApprovalCurrent(value),\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"approved\",\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"rejected\",\n              children: \"Reject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), formApprovalCurrent === \"rejected\" && /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Rejection Reason\",\n          name: \"rejectionReason\",\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s(DriverIncomeManager, \"tb2biqs1VqGsoIWr/Mjao9bDMVM=\", false, function () {\n  return [Form.useForm, Form.useForm];\n});\n_c = DriverIncomeManager;\nexport default DriverIncomeManager;\nvar _c;\n$RefreshReg$(_c, \"DriverIncomeManager\");","map":{"version":3,"names":["React","useEffect","useState","Table","Button","Modal","Form","Input","DatePicker","InputNumber","message","Row","Space","Select","Upload","PlusOutlined","EditOutlined","DeleteOutlined","LoadingOutlined","FileSearchOutlined","FilePdfOutlined","UploadOutlined","SwapOutlined","driverIncomeService","moment","jsPDF","uploadFile","userService","jsxDEV","_jsxDEV","Option","DriverIncomeManager","_s","incomes","setIncomes","drivers","setDrivers","loading","setLoading","isModalVisible","setIsModalVisible","isApprovalFormVisible","setIsApprovalFormVisible","editingIncome","setEditingIncome","searchText","setSearchText","sortedInfo","setSortedInfo","formApprovalCurrent","setFormApprovalCurrent","form","useForm","approvalForm","fetchIncomes","getAllUsers","data","getAllIncomes","console","log","error","showModal","income","setFieldsValue","incomeDate","resetFields","showApprovalForm","handleApprovalSubmit","values","validateFields","status","rejectionReason","incomeData","updateIncomeStatus","_id","success","handleSubmit","downloadUrl","incomeSlipImage","file","originFileObj","format","updateIncome","createIncome","deleteIncome","id","generatePDF","doc","text","tableColumn","tableRows","map","incomeId","driverEmail","incomeTime","incomeAmount","incomeDescription","autoTable","head","body","startY","save","handleSearch","value","handleSort","pagination","filters","sorter","filteredData","filter","toLowerCase","includes","columns","title","dataIndex","key","a","b","localeCompare","sortOrder","columnKey","order","render","date","unix","record","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","danger","justify","style","marginBottom","placeholder","prefix","onChange","e","target","width","dataSource","rowKey","indicator","open","onOk","onCancel","okText","cancelText","layout","Item","label","name","rules","required","driver","email","min","TextArea","defaultActiveFirstOption","_c","$RefreshReg$"],"sources":["C:/Users/dulas/Desktop/Transport-Management-System/frontend/src/modules/IncomeExpenseManagemt/DriverIncomeManager.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Table,\n  Button,\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  InputNumber,\n  message,\n  Row,\n  Space,\n  Select,\n  Upload,\n} from \"antd\";\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n  FileSearchOutlined,\n  FilePdfOutlined,\n  UploadOutlined,\n  SwapOutlined,\n} from \"@ant-design/icons\";\nimport driverIncomeService from \"../../services/driverIncomeService\";\nimport moment from \"moment\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { uploadFile } from \"../../services/uploadFileService\";\nimport userService from \"../../services/userService\";\n\nconst { Option } = Select;\n\nconst DriverIncomeManager = () => {\n  const [incomes, setIncomes] = useState([]);\n  const [drivers, setDrivers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isApprovalFormVisible, setIsApprovalFormVisible] = useState(false);\n  const [editingIncome, setEditingIncome] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortedInfo, setSortedInfo] = useState({});\n\n  const [formApprovalCurrent, setFormApprovalCurrent] = useState(\"approved\");\n\n  const [form] = Form.useForm();\n  const [approvalForm] = Form.useForm();\n\n  // Fetch all incomes\n  const fetchIncomes = async () => {\n    setLoading(true);\n    try {\n      const drivers = await userService.getAllUsers();\n      const data = await driverIncomeService.getAllIncomes();\n      console.log(drivers);\n      setDrivers(drivers);\n      setIncomes(data);\n    } catch (error) {\n      message.error(\"Failed to fetch incomes.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchIncomes();\n  }, []);\n\n  // Show modal for creating or editing income\n  const showModal = (income = null) => {\n    setEditingIncome(income);\n    if (income) {\n      form.setFieldsValue({\n        ...income,\n        incomeDate: moment(income.incomeDate),\n      });\n    } else {\n      form.resetFields();\n    }\n    setIsModalVisible(true);\n  };\n\n  const showApprovalForm = (income) => {\n    setEditingIncome(income);\n    setIsApprovalFormVisible(true);\n  }\n\n  const handleApprovalSubmit = async () => {\n    try {\n      const values = await approvalForm.validateFields();\n      let status = values.status;\n      let rejectionReason = values.rejectionReason;\n\n      console.log(status);\n\n      if (status === \"approved\") {\n        status = \"approved\";\n        rejectionReason = \"\";\n      } else {\n        status = \"rejected\";\n      }\n\n      const incomeData = {\n        status: status,\n        rejectionReason: rejectionReason,\n      };\n\n      await driverIncomeService.updateIncomeStatus(editingIncome._id, incomeData);\n      message.success(\"Income updated successfully.\");\n      setIsApprovalFormVisible(false);\n      setEditingIncome(null);\n      fetchIncomes();\n    } catch (error) {\n      message.error(\"Error in processing the form.\");\n    }\n  }\n\n  // Handle form submission for creating/updating income\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n\n      let downloadUrl = \"\";\n      if (values.incomeSlipImage) {\n        if (values.incomeSlipImage.file) {\n          downloadUrl = await uploadFile(\n            values.incomeSlipImage.file.originFileObj\n          );\n        }\n      } else {\n        downloadUrl = editingIncome.incomeSlipImage;\n      }\n\n      const incomeData = {\n        ...values,\n        incomeSlipImage: downloadUrl,\n        incomeDate: values.incomeDate.format(\"YYYY-MM-DD\"),\n      };\n\n      if (editingIncome) {\n        await driverIncomeService.updateIncome(editingIncome._id, incomeData);\n        message.success(\"Income updated successfully.\");\n      } else {\n        await driverIncomeService.createIncome(incomeData);\n        message.success(\"Income created successfully.\");\n      }\n\n      setIsModalVisible(false);\n      setEditingIncome(null);\n      fetchIncomes();\n    } catch (error) {\n      message.error(\"Error in processing the form.\");\n    }\n  };\n\n  // Delete income\n  const deleteIncome = async (id) => {\n    try {\n      await driverIncomeService.deleteIncome(id);\n      message.success(\"Income deleted successfully.\");\n      fetchIncomes();\n    } catch (error) {\n      message.error(\"Failed to delete income.\");\n    }\n  };\n\n  // Generate PDF\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Driver Income Report\", 14, 15);\n\n    const tableColumn = [\n      \"Income ID\",\n      \"Driver Email\",\n      \"Income Date\",\n      \"Income Time\",\n      \"Amount\",\n      \"Description\",\n      \"Status\",\n    ];\n    const tableRows = incomes.map((income) => [\n      income.incomeId,\n      income.driverEmail,\n      moment(income.incomeDate).format(\"YYYY-MM-DD\"),\n      income.incomeTime,\n      income.incomeAmount,\n      income.incomeDescription,\n      income.status,\n    ]);\n\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 20,\n    });\n\n    doc.save(\"driver_income_report.pdf\");\n  };\n\n  // Handle search\n  const handleSearch = (value) => {\n    setSearchText(value);\n  };\n\n  // Handle sort\n  const handleSort = (pagination, filters, sorter) => {\n    setSortedInfo(sorter);\n  };\n\n  // Filter data based on search text\n  const filteredData = incomes.filter(\n    (income) =>\n      income.incomeId.toLowerCase().includes(searchText.toLowerCase()) ||\n      income.driverEmail.toLowerCase().includes(searchText.toLowerCase()) ||\n      income.incomeDescription.toLowerCase().includes(searchText.toLowerCase())\n  );\n\n  // Table columns\n  const columns = [\n    {\n      title: \"Income ID\",\n      dataIndex: \"incomeId\",\n      key: \"incomeId\",\n      sorter: (a, b) => a.incomeId.localeCompare(b.incomeId),\n      sortOrder: sortedInfo.columnKey === \"incomeId\" && sortedInfo.order,\n    },\n    {\n      title: \"Driver Email\",\n      dataIndex: \"driverEmail\",\n      key: \"driverEmail\",\n      sorter: (a, b) => a.driverEmail.localeCompare(b.driverEmail),\n      sortOrder: sortedInfo.columnKey === \"driverEmail\" && sortedInfo.order,\n    },\n    {\n      title: \"Income Date\",\n      dataIndex: \"incomeDate\",\n      key: \"incomeDate\",\n      render: (date) => moment(date).format(\"YYYY-MM-DD\"),\n      sorter: (a, b) =>\n        moment(a.incomeDate).unix() - moment(b.incomeDate).unix(),\n      sortOrder: sortedInfo.columnKey === \"incomeDate\" && sortedInfo.order,\n    },\n    {\n      title: \"Income Time\",\n      dataIndex: \"incomeTime\",\n      key: \"incomeTime\",\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"incomeAmount\",\n      key: \"incomeAmount\",\n      sorter: (a, b) => a.incomeAmount - b.incomeAmount,\n      sortOrder: sortedInfo.columnKey === \"incomeAmount\" && sortedInfo.order,\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"incomeDescription\",\n      key: \"incomeDescription\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      sorter: (a, b) => a.status.localeCompare(b.status),\n      sortOrder: sortedInfo.columnKey === \"status\" && sortedInfo.order,\n    },\n    {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (text, record) => (\n        <Space>\n          <Button icon={<SwapOutlined />} onClick={() => showApprovalForm(record)} />\n          <Button icon={<EditOutlined />} onClick={() => showModal(record)} />\n          <Button\n            danger\n            icon={<DeleteOutlined />}\n            onClick={() => deleteIncome(record._id)}\n          />\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Row justify=\"space-between\" style={{ marginBottom: 20 }}>\n        <h1>Driver Income Manager</h1>\n        <Space>\n          {/* <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => showModal()}\n          >\n            Add Income\n          </Button> */}\n          <Button icon={<FilePdfOutlined />} onClick={generatePDF}>\n            Generate PDF\n          </Button>\n        </Space>\n      </Row>\n\n      <Row style={{ marginBottom: 20 }}>\n        <Input\n          placeholder=\"Search by Income ID, Driver Email, or Description\"\n          prefix={<FileSearchOutlined />}\n          onChange={(e) => handleSearch(e.target.value)}\n          style={{ width: 300 }}\n        />\n      </Row>\n\n      <Table\n        dataSource={filteredData}\n        columns={columns}\n        rowKey={(record) => record._id}\n        loading={loading ? { indicator: <LoadingOutlined /> } : false}\n        onChange={handleSort}\n      />\n\n      {/* Modal for Creating/Editing Income */}\n      <Modal\n        title={editingIncome ? \"Edit Income\" : \"Add Income\"}\n        open={isModalVisible}\n        onOk={handleSubmit}\n        onCancel={() => setIsModalVisible(false)}\n        okText={editingIncome ? \"Update\" : \"Create\"}\n        cancelText=\"Cancel\"\n      >\n        <Form form={form} layout=\"vertical\">\n          <Form.Item\n            label=\"Income ID\"\n            name=\"incomeId\"\n            rules={[{ required: true, message: \"Please enter the Income ID\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Driver Email\"\n            name=\"driverEmail\"\n            rules={[\n              { required: true, message: \"Please enter the Driver Email\" },\n            ]}\n          >\n            <Select>\n              {drivers.map((driver) => {\n                  return (<Option key={driver._id} value={driver.email}>\n                    {driver.email}\n                  </Option>)\n              })}\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label=\"Income Date\"\n            name=\"incomeDate\"\n            rules={[\n              { required: true, message: \"Please select the Income Date\" },\n            ]}\n          >\n            <DatePicker style={{ width: \"100%\" }} />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Income Time\"\n            name=\"incomeTime\"\n            rules={[\n              { required: true, message: \"Please enter the Income Time\" },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Income Amount\"\n            name=\"incomeAmount\"\n            rules={[{ required: true, message: \"Please enter the Amount\" }]}\n          >\n            <InputNumber min={0} style={{ width: \"100%\" }} />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Description\"\n            name=\"incomeDescription\"\n            rules={[\n              { required: true, message: \"Please enter the Description\" },\n            ]}\n          >\n            <Input.TextArea />\n          </Form.Item>\n\n          <Form.Item label=\"Income Slip Image\" name=\"incomeSlipImage\">\n            <Upload>\n              <Button icon={<UploadOutlined />}>Click to upload</Button>\n            </Upload>\n          </Form.Item>\n\n          {/* <Form.Item\n            label=\"Status\"\n            name=\"status\"\n            rules={[{ required: true, message: \"Please select the Status\" }]}\n          >\n            <Select>\n              <Option value=\"pending\">Pending</Option>\n              <Option value=\"approved\">Approved</Option>\n              <Option value=\"rejected\">Rejected</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item label=\"Rejection Reason\" name=\"rejectionReason\">\n            <Input.TextArea />\n          </Form.Item> */}\n        </Form>\n      </Modal>\n\n      {/* Modal for Approval Form */}\n      <Modal\n        title=\"Approval Form\"\n        open={isApprovalFormVisible}\n        onOk={handleApprovalSubmit}\n        onCancel={() => setIsApprovalFormVisible(false)}\n        cancelText=\"Cancel\"\n        okText=\"Submit\">\n        <Form form={approvalForm} layout=\"vertical\">\n          <Form.Item\n            label=\"Status\"\n            name=\"status\"\n            rules={[{ required: true, message: \"Please select the Status\" }]}\n          >\n\n            <Select defaultActiveFirstOption={formApprovalCurrent} onChange={(value) => setFormApprovalCurrent(value)}>\n              <Option value=\"approved\">Approve</Option>\n              <Option value=\"rejected\">Reject</Option>\n            </Select>\n          </Form.Item>\n\n          {\n            formApprovalCurrent === \"rejected\" &&\n            <Form.Item label=\"Rejection Reason\" name=\"rejectionReason\">\n              <Input.TextArea />\n            </Form.Item>\n          }\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DriverIncomeManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}