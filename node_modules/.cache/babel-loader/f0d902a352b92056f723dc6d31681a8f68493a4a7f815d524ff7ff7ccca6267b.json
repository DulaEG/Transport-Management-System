{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dulas\\\\Desktop\\\\Transport-Management-System\\\\frontend\\\\src\\\\modules\\\\IncomeExpenseManagemt\\\\ExpenseManger.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Button, Modal, Form, Input, DatePicker, InputNumber, message, Row, Col, Space, Select, Upload, Spin } from \"antd\";\nimport { PlusOutlined, EditOutlined, DeleteOutlined, LoadingOutlined, FileSearchOutlined, FilePdfOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport driverExpenseService from \"../../services/driverExpenseService\";\nimport moment from \"moment\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { uploadFile } from \"../../services/uploadFileService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst ExpenseManager = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [editingExpense, setEditingExpense] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [formLoading, setFormLoading] = useState(false); // New state for form loading\n  const [form] = Form.useForm();\n\n  // Fetch all expenses\n  const fetchExpenses = async () => {\n    setLoading(true);\n    try {\n      const data = await driverExpenseService.getAllExpenses();\n      setExpenses(data);\n    } catch (error) {\n      message.error(\"Failed to fetch expenses.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchExpenses();\n  }, []);\n\n  // Show modal for creating or editing expense\n  const showModal = (expense = null) => {\n    setEditingExpense(expense);\n    if (expense) {\n      form.setFieldsValue({\n        ...expense,\n        paymentDate: moment(expense.paymentDate)\n      });\n    } else {\n      form.resetFields();\n    }\n    setIsModalVisible(true);\n  };\n\n  // Handle form submission for creating/updating expense\n  const handleSubmit = async () => {\n    setFormLoading(true); // Start loading\n    try {\n      let downloadUrl = \"\";\n      const values = await form.validateFields();\n      if (values.paymentSlip) {\n        if (values.paymentSlip.file) {\n          downloadUrl = await uploadFile(values.paymentSlip.file.originFileObj);\n        } else {\n          downloadUrl = editingExpense.paymentSlip;\n        }\n      } else {\n        downloadUrl = editingExpense.paymentSlip;\n      }\n      const expenseData = {\n        ...values,\n        paymentSlip: downloadUrl,\n        paymentDate: values.paymentDate.format(\"YYYY-MM-DD\")\n      };\n      if (editingExpense) {\n        await driverExpenseService.updateExpense(editingExpense._id, expenseData);\n        message.success(\"Expense updated successfully.\");\n      } else {\n        await driverExpenseService.createExpense(expenseData);\n        message.success(\"Expense created successfully.\");\n      }\n      setIsModalVisible(false);\n      setEditingExpense(null);\n      fetchExpenses();\n    } catch (error) {\n      message.error(\"Error in processing the form.\");\n    } finally {\n      setFormLoading(false); // Stop loading\n    }\n  };\n\n  // Delete expense\n  const deleteExpense = async id => {\n    try {\n      await driverExpenseService.deleteExpense(id);\n      message.success(\"Expense deleted successfully.\");\n      fetchExpenses();\n    } catch (error) {\n      message.error(\"Failed to delete expense.\");\n    }\n  };\n\n  // Generate PDF\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Driver Expense Report\", 14, 15);\n    const tableColumn = [\"Expense ID\", \"Driver Email\", \"Payment Date\", \"Payment Time\", \"Amount\", \"Description\", \"Status\"];\n    const tableRows = expenses.map(expense => [expense.expensesId, expense.driverEmail, moment(expense.paymentDate).format(\"YYYY-MM-DD\"), expense.paymentTime, expense.paymentAmount, expense.paymentDescription, expense.status]);\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 20\n    });\n    doc.save(\"driver_expense_report.pdf\");\n  };\n\n  // Handle search\n  const handleSearch = value => {\n    setSearchText(value);\n  };\n\n  // Handle sort\n  const handleSort = (pagination, filters, sorter) => {\n    setSortedInfo(sorter);\n  };\n\n  // Filter data based on search text\n  const filteredData = expenses.filter(expense => {\n    var _expense$expensesId;\n    return ((_expense$expensesId = expense.expensesId) === null || _expense$expensesId === void 0 ? void 0 : _expense$expensesId.toLowerCase().includes(searchText.toLowerCase())) || expense.driverEmail.toLowerCase().includes(searchText.toLowerCase()) || expense.paymentDescription.toLowerCase().includes(searchText.toLowerCase());\n  });\n\n  // Table columns\n  const columns = [{\n    title: \"Expense ID\",\n    dataIndex: \"expensesId\",\n    key: \"expensesId\",\n    sorter: (a, b) => (a.expensesId || \"\").localeCompare(b.expensesId || \"\"),\n    sortOrder: sortedInfo.columnKey === \"expensesId\" && sortedInfo.order\n  }, {\n    title: \"Driver Email\",\n    dataIndex: \"driverEmail\",\n    key: \"driverEmail\",\n    sorter: (a, b) => a.driverEmail.localeCompare(b.driverEmail),\n    sortOrder: sortedInfo.columnKey === \"driverEmail\" && sortedInfo.order\n  }, {\n    title: \"Payment Date\",\n    dataIndex: \"paymentDate\",\n    key: \"paymentDate\",\n    render: date => moment(date).format(\"YYYY-MM-DD\"),\n    sorter: (a, b) => moment(a.paymentDate).unix() - moment(b.paymentDate).unix(),\n    sortOrder: sortedInfo.columnKey === \"paymentDate\" && sortedInfo.order\n  }, {\n    title: \"Payment Time\",\n    dataIndex: \"paymentTime\",\n    key: \"paymentTime\"\n  }, {\n    title: \"Amount\",\n    dataIndex: \"paymentAmount\",\n    key: \"paymentAmount\",\n    sorter: (a, b) => a.paymentAmount - b.paymentAmount,\n    sortOrder: sortedInfo.columnKey === \"paymentAmount\" && sortedInfo.order\n  }, {\n    title: \"Description\",\n    dataIndex: \"paymentDescription\",\n    key: \"paymentDescription\"\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    sorter: (a, b) => a.status.localeCompare(b.status),\n    sortOrder: sortedInfo.columnKey === \"status\" && sortedInfo.order\n  }, {\n    title: \"Actions\",\n    key: \"actions\",\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this),\n        onClick: () => showModal(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        danger: true,\n        icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }, this),\n        onClick: () => deleteExpense(record._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      justify: \"space-between\",\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Driver Expense Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 19\n          }, this),\n          onClick: () => showModal(),\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(FilePdfOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this),\n          onClick: generatePDF,\n          children: \"Generate PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search by Expense ID, Driver Email, or Description\",\n        prefix: /*#__PURE__*/_jsxDEV(FileSearchOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 19\n        }, this),\n        onChange: e => handleSearch(e.target.value),\n        style: {\n          width: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: filteredData,\n      columns: columns,\n      rowKey: record => record._id,\n      loading: loading ? {\n        indicator: /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 41\n        }, this)\n      } : false,\n      onChange: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: editingExpense ? \"Edit Expense\" : \"Add Expense\",\n      visible: isModalVisible,\n      onOk: handleSubmit,\n      onCancel: () => setIsModalVisible(false),\n      okText: editingExpense ? \"Update\" : \"Create\",\n      cancelText: \"Cancel\",\n      confirmLoading: formLoading // Show loading during form submission\n      ,\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        spinning: formLoading,\n        children: [\" \", /*#__PURE__*/_jsxDEV(Form, {\n          form: form,\n          layout: \"vertical\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            gutter: 16,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Expense ID\",\n                name: \"expensesId\",\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Driver Email\",\n                name: \"driverEmail\",\n                rules: [{\n                  required: true,\n                  message: \"Please enter the Driver Email\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 16,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Payment Date\",\n                name: \"paymentDate\",\n                rules: [{\n                  required: true,\n                  message: \"Please select the Payment Date\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  style: {\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Payment Time\",\n                name: \"paymentTime\",\n                rules: [{\n                  required: true,\n                  message: \"Please enter the Payment Time\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 16,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Payment Amount\",\n                name: \"paymentAmount\",\n                rules: [{\n                  required: true,\n                  message: \"Please enter the Amount\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                  min: 0,\n                  style: {\n                    width: \"100%\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 12,\n              children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Status\",\n                name: \"status\",\n                rules: [{\n                  required: true,\n                  message: \"Please select the Status\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  children: [/*#__PURE__*/_jsxDEV(Option, {\n                    value: \"pending\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Option, {\n                    value: \"approved\",\n                    children: \"Approved\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Option, {\n                    value: \"rejected\",\n                    children: \"Rejected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Description\",\n            name: \"paymentDescription\",\n            rules: [{\n              required: true,\n              message: \"Please enter the Description\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Payment Slip\",\n            name: \"paymentSlip\",\n            rules: [{\n              required: true,\n              message: \"Please upload the Payment Slip\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Upload, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 31\n                }, this),\n                children: \"Click to upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Rejection Reason\",\n            name: \"rejectionReason\",\n            children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseManager, \"OFzgES3iaQsFp3pxOh0g/BnXlZk=\", false, function () {\n  return [Form.useForm];\n});\n_c = ExpenseManager;\nexport default ExpenseManager;\nvar _c;\n$RefreshReg$(_c, \"ExpenseManager\");","map":{"version":3,"names":["React","useEffect","useState","Table","Button","Modal","Form","Input","DatePicker","InputNumber","message","Row","Col","Space","Select","Upload","Spin","PlusOutlined","EditOutlined","DeleteOutlined","LoadingOutlined","FileSearchOutlined","FilePdfOutlined","UploadOutlined","driverExpenseService","moment","jsPDF","uploadFile","jsxDEV","_jsxDEV","Option","ExpenseManager","_s","expenses","setExpenses","loading","setLoading","isModalVisible","setIsModalVisible","editingExpense","setEditingExpense","searchText","setSearchText","sortedInfo","setSortedInfo","formLoading","setFormLoading","form","useForm","fetchExpenses","data","getAllExpenses","error","showModal","expense","setFieldsValue","paymentDate","resetFields","handleSubmit","downloadUrl","values","validateFields","paymentSlip","file","originFileObj","expenseData","format","updateExpense","_id","success","createExpense","deleteExpense","id","generatePDF","doc","text","tableColumn","tableRows","map","expensesId","driverEmail","paymentTime","paymentAmount","paymentDescription","status","autoTable","head","body","startY","save","handleSearch","value","handleSort","pagination","filters","sorter","filteredData","filter","_expense$expensesId","toLowerCase","includes","columns","title","dataIndex","key","a","b","localeCompare","sortOrder","columnKey","order","render","date","unix","record","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","danger","justify","style","marginBottom","type","placeholder","prefix","onChange","e","target","width","dataSource","rowKey","indicator","visible","onOk","onCancel","okText","cancelText","confirmLoading","spinning","layout","gutter","span","Item","label","name","rules","required","min","TextArea","_c","$RefreshReg$"],"sources":["C:/Users/dulas/Desktop/Transport-Management-System/frontend/src/modules/IncomeExpenseManagemt/ExpenseManger.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Table,\n  Button,\n  Modal,\n  Form,\n  Input,\n  DatePicker,\n  InputNumber,\n  message,\n  Row,\n  Col,\n  Space,\n  Select,\n  Upload,\n  Spin,\n} from \"antd\";\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  LoadingOutlined,\n  FileSearchOutlined,\n  FilePdfOutlined,\n  UploadOutlined,\n} from \"@ant-design/icons\";\nimport driverExpenseService from \"../../services/driverExpenseService\";\nimport moment from \"moment\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { uploadFile } from \"../../services/uploadFileService\";\n\nconst { Option } = Select;\n\nconst ExpenseManager = () => {\n  const [expenses, setExpenses] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [editingExpense, setEditingExpense] = useState(null);\n  const [searchText, setSearchText] = useState(\"\");\n  const [sortedInfo, setSortedInfo] = useState({});\n  const [formLoading, setFormLoading] = useState(false); // New state for form loading\n  const [form] = Form.useForm();\n\n  // Fetch all expenses\n  const fetchExpenses = async () => {\n    setLoading(true);\n    try {\n      const data = await driverExpenseService.getAllExpenses();\n      setExpenses(data);\n    } catch (error) {\n      message.error(\"Failed to fetch expenses.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchExpenses();\n  }, []);\n\n  // Show modal for creating or editing expense\n  const showModal = (expense = null) => {\n    setEditingExpense(expense);\n    if (expense) {\n      form.setFieldsValue({\n        ...expense,\n        paymentDate: moment(expense.paymentDate),\n      });\n    } else {\n      form.resetFields();\n    }\n    setIsModalVisible(true);\n  };\n\n  // Handle form submission for creating/updating expense\n  const handleSubmit = async () => {\n    setFormLoading(true); // Start loading\n    try {\n      let downloadUrl = \"\";\n      const values = await form.validateFields();\n      if (values.paymentSlip) {\n        if (values.paymentSlip.file) {\n          downloadUrl = await uploadFile(values.paymentSlip.file.originFileObj);\n        } else {\n          downloadUrl = editingExpense.paymentSlip;\n        }\n      } else {\n        downloadUrl = editingExpense.paymentSlip;\n      }\n\n      const expenseData = {\n        ...values,\n        paymentSlip: downloadUrl,\n        paymentDate: values.paymentDate.format(\"YYYY-MM-DD\"),\n      };\n\n      if (editingExpense) {\n        await driverExpenseService.updateExpense(\n          editingExpense._id,\n          expenseData\n        );\n        message.success(\"Expense updated successfully.\");\n      } else {\n        await driverExpenseService.createExpense(expenseData);\n        message.success(\"Expense created successfully.\");\n      }\n\n      setIsModalVisible(false);\n      setEditingExpense(null);\n      fetchExpenses();\n    } catch (error) {\n      message.error(\"Error in processing the form.\");\n    } finally {\n      setFormLoading(false); // Stop loading\n    }\n  };\n\n  // Delete expense\n  const deleteExpense = async (id) => {\n    try {\n      await driverExpenseService.deleteExpense(id);\n      message.success(\"Expense deleted successfully.\");\n      fetchExpenses();\n    } catch (error) {\n      message.error(\"Failed to delete expense.\");\n    }\n  };\n\n  // Generate PDF\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Driver Expense Report\", 14, 15);\n\n    const tableColumn = [\n      \"Expense ID\",\n      \"Driver Email\",\n      \"Payment Date\",\n      \"Payment Time\",\n      \"Amount\",\n      \"Description\",\n      \"Status\",\n    ];\n    const tableRows = expenses.map((expense) => [\n      expense.expensesId,\n      expense.driverEmail,\n      moment(expense.paymentDate).format(\"YYYY-MM-DD\"),\n      expense.paymentTime,\n      expense.paymentAmount,\n      expense.paymentDescription,\n      expense.status,\n    ]);\n\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 20,\n    });\n\n    doc.save(\"driver_expense_report.pdf\");\n  };\n\n  // Handle search\n  const handleSearch = (value) => {\n    setSearchText(value);\n  };\n\n  // Handle sort\n  const handleSort = (pagination, filters, sorter) => {\n    setSortedInfo(sorter);\n  };\n\n  // Filter data based on search text\n  const filteredData = expenses.filter(\n    (expense) =>\n      expense.expensesId?.toLowerCase().includes(searchText.toLowerCase()) ||\n      expense.driverEmail.toLowerCase().includes(searchText.toLowerCase()) ||\n      expense.paymentDescription\n        .toLowerCase()\n        .includes(searchText.toLowerCase())\n  );\n\n  // Table columns\n  const columns = [\n    {\n      title: \"Expense ID\",\n      dataIndex: \"expensesId\",\n      key: \"expensesId\",\n      sorter: (a, b) => (a.expensesId || \"\").localeCompare(b.expensesId || \"\"),\n      sortOrder: sortedInfo.columnKey === \"expensesId\" && sortedInfo.order,\n    },\n    {\n      title: \"Driver Email\",\n      dataIndex: \"driverEmail\",\n      key: \"driverEmail\",\n      sorter: (a, b) => a.driverEmail.localeCompare(b.driverEmail),\n      sortOrder: sortedInfo.columnKey === \"driverEmail\" && sortedInfo.order,\n    },\n    {\n      title: \"Payment Date\",\n      dataIndex: \"paymentDate\",\n      key: \"paymentDate\",\n      render: (date) => moment(date).format(\"YYYY-MM-DD\"),\n      sorter: (a, b) =>\n        moment(a.paymentDate).unix() - moment(b.paymentDate).unix(),\n      sortOrder: sortedInfo.columnKey === \"paymentDate\" && sortedInfo.order,\n    },\n    {\n      title: \"Payment Time\",\n      dataIndex: \"paymentTime\",\n      key: \"paymentTime\",\n    },\n    {\n      title: \"Amount\",\n      dataIndex: \"paymentAmount\",\n      key: \"paymentAmount\",\n      sorter: (a, b) => a.paymentAmount - b.paymentAmount,\n      sortOrder: sortedInfo.columnKey === \"paymentAmount\" && sortedInfo.order,\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"paymentDescription\",\n      key: \"paymentDescription\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      sorter: (a, b) => a.status.localeCompare(b.status),\n      sortOrder: sortedInfo.columnKey === \"status\" && sortedInfo.order,\n    },\n    {\n      title: \"Actions\",\n      key: \"actions\",\n      render: (text, record) => (\n        <Space>\n          <Button icon={<EditOutlined />} onClick={() => showModal(record)} />\n          <Button\n            danger\n            icon={<DeleteOutlined />}\n            onClick={() => deleteExpense(record._id)}\n          />\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Row justify=\"space-between\" style={{ marginBottom: 20 }}>\n        <h1>Driver Expense Manager</h1>\n        <Space>\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => showModal()}\n          >\n            Add Expense\n          </Button>\n          <Button icon={<FilePdfOutlined />} onClick={generatePDF}>\n            Generate PDF\n          </Button>\n        </Space>\n      </Row>\n\n      <Row style={{ marginBottom: 20 }}>\n        <Input\n          placeholder=\"Search by Expense ID, Driver Email, or Description\"\n          prefix={<FileSearchOutlined />}\n          onChange={(e) => handleSearch(e.target.value)}\n          style={{ width: 300 }}\n        />\n      </Row>\n\n      <Table\n        dataSource={filteredData}\n        columns={columns}\n        rowKey={(record) => record._id}\n        loading={loading ? { indicator: <LoadingOutlined /> } : false}\n        onChange={handleSort}\n      />\n\n      {/* Modal for Creating/Editing Expense */}\n      <Modal\n        title={editingExpense ? \"Edit Expense\" : \"Add Expense\"}\n        visible={isModalVisible}\n        onOk={handleSubmit}\n        onCancel={() => setIsModalVisible(false)}\n        okText={editingExpense ? \"Update\" : \"Create\"}\n        cancelText=\"Cancel\"\n        confirmLoading={formLoading} // Show loading during form submission\n      >\n        <Spin spinning={formLoading}>\n          {\" \"}\n          {/* Spinner while form is loading */}\n          <Form form={form} layout=\"vertical\">\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item label=\"Expense ID\" name=\"expensesId\">\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Driver Email\"\n                  name=\"driverEmail\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please enter the Driver Email\",\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Payment Date\"\n                  name=\"paymentDate\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please select the Payment Date\",\n                    },\n                  ]}\n                >\n                  <DatePicker style={{ width: \"100%\" }} />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Payment Time\"\n                  name=\"paymentTime\"\n                  rules={[\n                    {\n                      required: true,\n                      message: \"Please enter the Payment Time\",\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Payment Amount\"\n                  name=\"paymentAmount\"\n                  rules={[\n                    { required: true, message: \"Please enter the Amount\" },\n                  ]}\n                >\n                  <InputNumber min={0} style={{ width: \"100%\" }} />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Status\"\n                  name=\"status\"\n                  rules={[\n                    { required: true, message: \"Please select the Status\" },\n                  ]}\n                >\n                  <Select>\n                    <Option value=\"pending\">Pending</Option>\n                    <Option value=\"approved\">Approved</Option>\n                    <Option value=\"rejected\">Rejected</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n\n            <Form.Item\n              label=\"Description\"\n              name=\"paymentDescription\"\n              rules={[\n                { required: true, message: \"Please enter the Description\" },\n              ]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n\n            <Form.Item\n              label=\"Payment Slip\"\n              name=\"paymentSlip\"\n              rules={[\n                { required: true, message: \"Please upload the Payment Slip\" },\n              ]}\n            >\n              <Upload>\n                <Button icon={<UploadOutlined />}>Click to upload</Button>\n              </Upload>\n            </Form.Item>\n\n            <Form.Item label=\"Rejection Reason\" name=\"rejectionReason\">\n              <Input.TextArea />\n            </Form.Item>\n          </Form>\n        </Spin>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ExpenseManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}