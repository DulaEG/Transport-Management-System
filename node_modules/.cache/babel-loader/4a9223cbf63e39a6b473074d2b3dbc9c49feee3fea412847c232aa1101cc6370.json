{"ast":null,"code":"import axios from \"axios\";\nimport { baseUrl } from \"../utils/constants\";\nconst url = baseUrl + \"/maintenance\";\nconst maintenanceService = {\n  // Fetch all maintenance records\n  getAllMaintenances: async () => {\n    try {\n      const response = await axios.get(url);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching maintenances:\", error);\n      throw error;\n    }\n  },\n  // Fetch a specific maintenance record by ID\n  getMaintenanceById: async id => {\n    try {\n      const response = await axios.get(`${url}/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching maintenance with ID: ${id}`, error);\n      throw error;\n    }\n  },\n  // Create a new maintenance record\n  createMaintenance: async maintenanceData => {\n    try {\n      const response = await axios.post(url, maintenanceData);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating maintenance:\", error);\n      throw error;\n    }\n  },\n  // Update an existing maintenance record\n  updateMaintenance: async (id, maintenanceData) => {\n    try {\n      const response = await axios.put(`${url}/${id}`, maintenanceData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating maintenance with ID: ${id}`, error);\n      throw error;\n    }\n  },\n  // Delete a maintenance record\n  deleteMaintenance: async id => {\n    try {\n      const response = await axios.delete(`${url}/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting maintenance with ID: ${id}`, error);\n      throw error;\n    }\n  }\n};\nexport default maintenanceService;","map":{"version":3,"names":["axios","baseUrl","url","maintenanceService","getAllMaintenances","response","get","data","error","console","getMaintenanceById","id","createMaintenance","maintenanceData","post","updateMaintenance","put","deleteMaintenance","delete"],"sources":["C:/Users/dulas/Desktop/Transport-Management-System/frontend/src/services/maintainceService.js"],"sourcesContent":["import axios from \"axios\";\nimport { baseUrl } from \"../utils/constants\";\n\nconst url = baseUrl + \"/maintenance\";\n\nconst maintenanceService = {\n  // Fetch all maintenance records\n  getAllMaintenances: async () => {\n    try {\n      const response = await axios.get(url);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching maintenances:\", error);\n      throw error;\n    }\n  },\n\n  // Fetch a specific maintenance record by ID\n  getMaintenanceById: async (id) => {\n    try {\n      const response = await axios.get(`${url}/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching maintenance with ID: ${id}`, error);\n      throw error;\n    }\n  },\n\n  // Create a new maintenance record\n  createMaintenance: async (maintenanceData) => {\n    try {\n      const response = await axios.post(url, maintenanceData);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error creating maintenance:\", error);\n      throw error;\n    }\n  },\n\n  // Update an existing maintenance record\n  updateMaintenance: async (id, maintenanceData) => {\n    try {\n      const response = await axios.put(`${url}/${id}`, maintenanceData);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating maintenance with ID: ${id}`, error);\n      throw error;\n    }\n  },\n\n  // Delete a maintenance record\n  deleteMaintenance: async (id) => {\n    try {\n      const response = await axios.delete(`${url}/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error deleting maintenance with ID: ${id}`, error);\n      throw error;\n    }\n  },\n};\n\nexport default maintenanceService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,GAAG,GAAGD,OAAO,GAAG,cAAc;AAEpC,MAAME,kBAAkB,GAAG;EACzB;EACAC,kBAAkB,EAAE,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACJ,GAAG,CAAC;MACrC,OAAOG,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,kBAAkB,EAAE,MAAOC,EAAE,IAAK;IAChC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGJ,GAAG,IAAIS,EAAE,EAAE,CAAC;MAChD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuCG,EAAE,EAAE,EAAEH,KAAK,CAAC;MACjE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAI,iBAAiB,EAAE,MAAOC,eAAe,IAAK;IAC5C,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAI,CAACZ,GAAG,EAAEW,eAAe,CAAC;MACvD,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,iBAAiB,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,eAAe,KAAK;IAChD,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACgB,GAAG,CAAC,GAAGd,GAAG,IAAIS,EAAE,EAAE,EAAEE,eAAe,CAAC;MACjE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuCG,EAAE,EAAE,EAAEH,KAAK,CAAC;MACjE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAS,iBAAiB,EAAE,MAAON,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACkB,MAAM,CAAC,GAAGhB,GAAG,IAAIS,EAAE,EAAE,CAAC;MACnD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuCG,EAAE,EAAE,EAAEH,KAAK,CAAC;MACjE,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeL,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}