{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dulas\\\\Desktop\\\\Transport-Management-System\\\\frontend\\\\src\\\\modules\\\\Inquiry\\\\InquiryCharts.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Chart as ChartJS, ArcElement, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { Pie, Bar } from \"react-chartjs-2\";\nimport { Card, Typography } from \"antd\";\nimport { PieChartOutlined, BarChartOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Title: AntTitle\n} = Typography;\nChartJS.register(ArcElement, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst ChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 24px;\n`;\n_c = ChartContainer;\nconst ChartsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 24px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n_c2 = ChartsWrapper;\nconst ChartCard = styled(Card)`\n  width: 48%;\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-direction: column;\n  }\n\n  .ant-card-head-title {\n    display: flex;\n    align-items: center;\n  }\n\n  .chart-icon {\n    margin-right: 8px;\n  }\n`;\n_c3 = ChartCard;\nconst TextSection = styled.div`\n  width: 25%;\n  margin-left: 16px;\n\n  p {\n    margin: 0;\n    padding: 4px 0;\n  }\n`;\n_c4 = TextSection;\nconst InquiryCharts = ({\n  inquiries\n}) => {\n  // Process data for Feedback Distribution by Type\n  const typeCount = inquiries.reduce((acc, inquiry) => {\n    acc[inquiry.type] = (acc[inquiry.type] || 0) + 1;\n    return acc;\n  }, {});\n  const totalTypes = Object.values(typeCount).reduce((sum, value) => sum + value, 0);\n  const typePercentages = Object.keys(typeCount).map(type => ({\n    label: type,\n    percentage: (typeCount[type] / totalTypes * 100).toFixed(2)\n  }));\n  const typeData = {\n    labels: Object.keys(typeCount),\n    datasets: [{\n      data: Object.values(typeCount),\n      backgroundColor: [\"#FF9999\", \"#66B2FF\", \"#FFCC99\", \"#99FF99\"]\n    }]\n  };\n\n  // Process data for Feedback Distribution by Status\n  const statusCount = inquiries.reduce((acc, inquiry) => {\n    acc[inquiry.status] = (acc[inquiry.status] || 0) + 1;\n    return acc;\n  }, {});\n  const totalStatuses = Object.values(statusCount).reduce((sum, value) => sum + value, 0);\n  const statusPercentages = Object.keys(statusCount).map(status => ({\n    label: status,\n    percentage: (statusCount[status] / totalStatuses * 100).toFixed(2)\n  }));\n  const statusData = {\n    labels: Object.keys(statusCount),\n    datasets: [{\n      data: Object.values(statusCount),\n      backgroundColor: [\"#FF9999\", \"#66B2FF\", \"#FFCC99\"]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(AntTitle, {\n      level: 2,\n      children: \"Customer Feedback Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartsWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ChartCard, {\n        title: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(PieChartOutlined, {\n            className: \"chart-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), \"Feedback Distribution by Type\"]\n        }, void 0, true),\n        children: [/*#__PURE__*/_jsxDEV(Pie, {\n          data: typeData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextSection, {\n          children: typePercentages.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.label, \": \", item.percentage, \"%\"]\n          }, item.label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n        title: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(BarChartOutlined, {\n            className: \"chart-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), \"Feedback Distribution by Status\"]\n        }, void 0, true),\n        children: [/*#__PURE__*/_jsxDEV(Bar, {\n          data: statusData,\n          options: {\n            scales: {\n              y: {\n                beginAtZero: true,\n                ticks: {\n                  stepSize: 1\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextSection, {\n          children: statusPercentages.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.label, \": \", item.percentage, \"%\"]\n          }, item.label, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_c5 = InquiryCharts;\nexport default InquiryCharts;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ChartContainer\");\n$RefreshReg$(_c2, \"ChartsWrapper\");\n$RefreshReg$(_c3, \"ChartCard\");\n$RefreshReg$(_c4, \"TextSection\");\n$RefreshReg$(_c5, \"InquiryCharts\");","map":{"version":3,"names":["React","styled","Chart","ChartJS","ArcElement","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Pie","Bar","Card","Typography","PieChartOutlined","BarChartOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","AntTitle","register","ChartContainer","div","_c","ChartsWrapper","_c2","ChartCard","_c3","TextSection","_c4","InquiryCharts","inquiries","typeCount","reduce","acc","inquiry","type","totalTypes","Object","values","sum","value","typePercentages","keys","map","label","percentage","toFixed","typeData","labels","datasets","data","backgroundColor","statusCount","status","totalStatuses","statusPercentages","statusData","children","level","fileName","_jsxFileName","lineNumber","columnNumber","title","className","item","options","scales","y","beginAtZero","ticks","stepSize","_c5","$RefreshReg$"],"sources":["C:/Users/dulas/Desktop/Transport-Management-System/frontend/src/modules/Inquiry/InquiryCharts.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Pie, Bar } from \"react-chartjs-2\";\nimport { Card, Typography } from \"antd\";\nimport { PieChartOutlined, BarChartOutlined } from \"@ant-design/icons\";\n\nconst { Title: AntTitle } = Typography;\n\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst ChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 24px;\n`;\n\nconst ChartsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 24px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nconst ChartCard = styled(Card)`\n  width: 48%;\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-direction: column;\n  }\n\n  .ant-card-head-title {\n    display: flex;\n    align-items: center;\n  }\n\n  .chart-icon {\n    margin-right: 8px;\n  }\n`;\n\nconst TextSection = styled.div`\n  width: 25%;\n  margin-left: 16px;\n\n  p {\n    margin: 0;\n    padding: 4px 0;\n  }\n`;\n\nconst InquiryCharts = ({ inquiries }) => {\n  // Process data for Feedback Distribution by Type\n  const typeCount = inquiries.reduce((acc, inquiry) => {\n    acc[inquiry.type] = (acc[inquiry.type] || 0) + 1;\n    return acc;\n  }, {});\n\n  const totalTypes = Object.values(typeCount).reduce(\n    (sum, value) => sum + value,\n    0\n  );\n  const typePercentages = Object.keys(typeCount).map((type) => ({\n    label: type,\n    percentage: ((typeCount[type] / totalTypes) * 100).toFixed(2),\n  }));\n\n  const typeData = {\n    labels: Object.keys(typeCount),\n    datasets: [\n      {\n        data: Object.values(typeCount),\n        backgroundColor: [\"#FF9999\", \"#66B2FF\", \"#FFCC99\", \"#99FF99\"],\n      },\n    ],\n  };\n\n  // Process data for Feedback Distribution by Status\n  const statusCount = inquiries.reduce((acc, inquiry) => {\n    acc[inquiry.status] = (acc[inquiry.status] || 0) + 1;\n    return acc;\n  }, {});\n\n  const totalStatuses = Object.values(statusCount).reduce(\n    (sum, value) => sum + value,\n    0\n  );\n  const statusPercentages = Object.keys(statusCount).map((status) => ({\n    label: status,\n    percentage: ((statusCount[status] / totalStatuses) * 100).toFixed(2),\n  }));\n\n  const statusData = {\n    labels: Object.keys(statusCount),\n    datasets: [\n      {\n        data: Object.values(statusCount),\n        backgroundColor: [\"#FF9999\", \"#66B2FF\", \"#FFCC99\"],\n      },\n    ],\n  };\n\n  return (\n    <ChartContainer>\n      <AntTitle level={2}>Customer Feedback Report</AntTitle>\n      <ChartsWrapper>\n        <ChartCard\n          title={\n            <>\n              <PieChartOutlined className=\"chart-icon\" />\n              Feedback Distribution by Type\n            </>\n          }\n        >\n          <Pie data={typeData} />\n          <TextSection>\n            {typePercentages.map((item) => (\n              <p key={item.label}>\n                {item.label}: {item.percentage}%\n              </p>\n            ))}\n          </TextSection>\n        </ChartCard>\n\n        <ChartCard\n          title={\n            <>\n              <BarChartOutlined className=\"chart-icon\" />\n              Feedback Distribution by Status\n            </>\n          }\n        >\n          <Bar\n            data={statusData}\n            options={{\n              scales: {\n                y: {\n                  beginAtZero: true,\n                  ticks: {\n                    stepSize: 1,\n                  },\n                },\n              },\n            }}\n          />\n          <TextSection>\n            {statusPercentages.map((item) => (\n              <p key={item.label}>\n                {item.label}: {item.percentage}%\n              </p>\n            ))}\n          </TextSection>\n        </ChartCard>\n      </ChartsWrapper>\n    </ChartContainer>\n  );\n};\n\nexport default InquiryCharts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}